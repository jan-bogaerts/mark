{"cache":{"9c672829-a31d-47cb-9d66-e676423a06da | DialogService":{"result":"The 'DialogService' is a singleton service class that manages the display of various dialog boxes including error, warning, and information boxes. It provides functions such as 'showErrorDialog' for displaying error dialog boxes with custom title and content, 'showSaveDialog' and 'showOpenDialog' for displaying save and open dialog boxes with markdown and file type filters respectively. It also includes a 'confirm' function that displays a question message box with \"Yes\", \"No\", and \"Cancel\" buttons, returning corresponding boolean or null values.","prompt":null,"state":"still-valid"},"fc366a69-db91-4f35-b538-182295436d18 | ThemeService":{"result":"The 'ThemeService' is a service class that manages theme-related functionalities. It handles the selection of theme font and size, saving these preferences to local storage. It also retrieves these stored values when needed. The service supports both light and dark theme options. It notifies subscribers about any changes in the theme. Components utilize this service to apply the selected theme to their styles. Additionally, it triggers a refresh of the main window content whenever the theme is updated.","prompt":null,"state":"still-valid"},"6e52cca8-7baf-4c4f-97c5-effbf603eb14 | ProjectService":{"result":"The 'ProjectService' is a global text fragment management service. It handles storage of parsed and raw content, tracks the loaded project's filename, and maintains an \"isDirty\" property that triggers an event upon change. The service offers functions for deleting, adding, marking fragments, and retrieving by key. It also identifies outdated fragments using an EventTarget field. User configurations such as auto-save settings are stored in local storage. The service raises events for various actions including project loading/creation, fragment deletion/insertion, marking as out of date/being built/up to date, external title changes, and dirty status changes.","prompt":null,"state":"still-valid"},"7946446e-33e7-4bd5-a7b6-3d001271627c | ProjectConfigurationService":{"result":"The 'ProjectConfigurationService' is a service class that oversees the management of project configurations. It includes a feature 'eventTarget' that allows for the registration and deregistration of event handlers for configuration modifications. It also contains a 'config' field, a JSON object that provides comprehensive access to the set configuration.","prompt":null,"state":"still-valid"},"fd347c00-e1ea-4961-8544-3048650deb2b | StorageService":{"result":"The 'StorageService' is a singleton service class responsible for managing project data storage. It features functions for initializing, opening, loading, updating, marking, and saving project data. This includes specific methods for handling changes in the gpt-service's modelsMap, loading and saving keys, models map, and project configurations. It also has functions to mark the project as dirty and update out-of-date elements.","prompt":null,"state":"still-valid"},"3cd6abe1-d84e-41c4-a421-07a63d196280 | ChangeProcessorService":{"result":"The 'ChangeProcessorService' is a service class that maintains the synchronization between the project structure and the source by managing content modifications. It incorporates a 'process' function that updates the project service in response to user edits, including line replacements, deletions, insertions, and marking storage as dirty.","prompt":null,"state":"still-valid"},"3cd6abe1-d84e-41c4-a421-07a63d196280 | ProjectService":{"result":"The 'ProjectService' is a service class that maintains the synchronization of the project structure with its source. It processes content changes such as edits, replacements, deletions, and insertions made by the user. It also marks storage as dirty when changes are made. Its key function, \"process\", triggers these updates to ensure the project service is always up-to-date.","prompt":null,"state":"still-valid"},"3cd6abe1-d84e-41c4-a421-07a63d196280 | LineParser":{"result":"The 'LineParser' is a service class that maintains the synchronization between the project structure and the source by managing content modifications. It incorporates a 'process' function that updates the project service in response to user edits, including line replacements, deletions, insertions, and marks storage as dirty when changes are made.","prompt":null,"state":"still-valid"},"3cd6abe1-d84e-41c4-a421-07a63d196280 | StorageService":{"result":"The 'StorageService' is a service class that maintains the synchronization between the project structure and the source by managing content modifications. It incorporates a 'process' function that updates the project service in response to user edits, including line replacements, deletions, insertions, and flags storage when changes have been made but not yet saved.","prompt":null,"state":"still-valid"},"8c9e5644-55a8-44c2-ac7b-6fdea2680697 | FolderService":{"result":"The 'FolderService' is a singleton service managing the location of the active project. It holds properties for various project paths including root, cache, configuration, plugins, and output folders. It enables actions like clearing, initializing, moving, copying, and setting a new project location, involving tasks like folder creation, file manipulation, and property updates.","prompt":null,"state":"still-valid"},"7ed49936-ac3f-4a7c-a70d-8ccd51b1c327 | SelectionService":{"result":"The 'SelectionService' is a global tracking service for selected text and the active editor. It enables monitoring of selection changes and facilitates actions such as cut, copy, paste, delete, clear selection, select all, and hasSelection. Additionally, it offers a function to obtain the style of the selected line.","prompt":null,"state":"still-valid"},"958692be-22c0-452b-90ac-6c36a431fafd | KeyService":{"result":"The 'KeyService' is a service class that manages the creation and loading of UUID keys for text fragments based on their location within the text. It includes functions such as 'calculateLocation' that builds a location string, 'loadUuidFromLocs' that indicates which UUIDs to use during project loading, 'assignKey' that assigns a key to a fragment, and 'getLocations' that creates a dictionary of location-key pairs. It also has the ability to calculate the key of a text fragment by determining its depth and looping through previous fragments.","prompt":null,"state":"still-valid"},"31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParser":{"result":"The 'LineParser' service class is a singleton object designed to parse markdown lines and update text-fragments in the project-service. It maintains a fragmentIndex array and includes several functions. The 'createTextFragment' function processes a line, assigns a depth level, removes '#' symbols, trims the line, assigns a title, sets flags, initializes arrays, assigns a key, adds it to the project-service, and returns it. The 'clear' function is used to clear the fragmentsIndex list. The 'getStartLine' function returns the index of a fragment, while the 'parse' function is responsible for line parsing and list manipulation.","prompt":null,"state":"still-valid"},"31da607d-07e2-4c54-9b1c-9a11a786c58f | TextFragment":{"result":"The 'TextFragment' service class is a singleton object designed to parse markdown lines and update text-fragments within the project-service. It features a fragmentIndex array and several functions including 'createTextFragment', 'clear', 'getStartLine', and 'parse'. The 'createTextFragment' function processes a line, assigns a depth-level, removes '#' symbols, trims the line, assigns a title, sets flags, initializes arrays, assigns a key, adds it to the project-service, and returns it. The 'clear' function is used to clear the fragmentsIndex list. The 'getStartLine' function returns the index of a fragment, while the 'parse' function is responsible for line parsing and list manipulation.","prompt":null,"state":"still-valid"},"31da607d-07e2-4c54-9b1c-9a11a786c58f | ProjectService":{"result":"The 'ProjectService' is a service class that manages text fragments in a project. It includes a singleton object, the line-parser service, which parses markdown lines and updates text fragments. Key features include a 'fragmentIndex' array, a 'createTextFragment' function for processing lines and assigning various attributes, a 'clear' function to clear the fragmentIndex list, a 'getStartLine' function to return the index of a fragment, and a 'parse' function for line parsing and list manipulation.","prompt":null,"state":"still-valid"},"31da607d-07e2-4c54-9b1c-9a11a786c58f | KeyService":{"result":"The 'KeyService' is a singleton service class responsible for parsing markdown lines and updating text-fragments in the project-service. It maintains a fragmentIndex array and offers several functions. The 'createTextFragment' function processes a line, assigns various attributes, and adds it to the project-service. The 'clear' function is used to clear the fragmentIndex list. The 'getStartLine' function retrieves the index of a fragment, and the 'parse' function manages line parsing and list manipulation.","prompt":null,"state":"still-valid"},"31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParserHelpers":{"result":"The 'LineParserHelpers' is a service class that provides functionalities for parsing markdown lines and updating text-fragments in a project. It maintains a fragmentIndex array and offers methods such as createTextFragment for processing lines and assigning various attributes, clear for resetting the fragmentsIndex list, getStartLine for retrieving the index of a fragment, and parse for managing line parsing and list manipulation.","prompt":null,"state":"still-valid"},"45fd1335-5429-47ea-a577-c11db18a28a0 | PositionTrackingService":{"result":"The 'PositionTrackingService' is a service class that monitors and manages a user's interaction with a text-fragment and transformer. It keeps track of the selected line number, associated text-fragment, active transformer, and any modifications made to the selected text-fragment. It provides methods to define the current position, reset the active fragment and line, and establish the active fragment and transformer.","prompt":null,"state":"still-valid"},"68dbb9c3-e1a8-4287-b68a-db5070e55505 | LogService":{"result":"The 'LogService' is a singleton service that manages and tracks user messages globally. It features an 'eventTarget' field for event dispatching and a 'showLogWindow' property that triggers a function to display the log window. It includes 'beginMsg' function for creating and sending log items to the log window, and 'logMsgResponse' function for creating response objects and sending them to the log window. The service also has a 'setLogWindowVisibility' function that manages callback registration, internal state updates, and event triggering.","prompt":null,"state":"still-valid"},"0136ea45-e1de-4444-b833-2d8cfd2cc956 | GPTService":{"result":"The 'GPTService' is a service class that interacts with the OpenAI API backend using the OpenAI Node.js library. It maintains a default model and maximum token size information for known models. It includes functions to send API requests, calculate the number of tokens used, retrieve available models, and update the API key. The OpenAI library is initialized with a valid API key stored in the 'apiKey' field.","prompt":null,"state":"still-valid"},"96aad863-3686-497b-8638-99081b0c947e | ResultCacheService":{"result":"The 'ResultCacheService' is a service class that manages and tracks the state of cached results for transformers, including the input used for output generation. It monitors changes in project services and other transformer result caches. The service uses a dictionary to map keys to results, storing them in a JSON file, which is loaded during construction and cleared if non-existent. The cache can be updated with new results and offers functions for result retrieval, out-of-date fragment checks, and cache clearing. It also handles events related to fragment deletion, text fragment changes, and result changes from input services. The service supports multiple keys for a single result value.","prompt":null,"state":"still-valid"},"33a93cd2-11ee-4ec2-9263-101b212474ab | BuildService":{"result":"The 'BuildService' is a service class that processes text fragments using transformers. It has an eventTarget field for dispatching events and a showDebugger property that triggers the `show-debugger` event. It includes buildAll and runTransformer functions that handle errors and call the transformer's getResults function. The service class also has debug, isBuilding, and isPaused properties that indicate the status of the build service. Additionally, it has tryPause, runNext, and stopRun methods for controlling execution flow. Lastly, it has a setDebuggerVisibility function that updates the showDebugger property and triggers the `show-debugger` event.","prompt":null,"state":"still-valid"},"1056ce6a-ac4b-410e-91d3-f8117a6084b0 | BuildStackService":{"result":"The 'BuildStackService' is a service class that manages and tracks the state of running textframe-transformer pairs to prevent circular references during the build process. It provides functionalities to register, unregister, and verify the status of running transformers. It also allows the state to be set to \"validating\" to block calls to the llms.","prompt":null,"state":"still-valid"},"849a7ae4-6a95-43dd-9c90-6ef41dc86a80 | CybertronService":{"result":"The 'CybertronService' is a service class that manages a global list of transformers and entry-points. It allows for registration, addition, and unregistration of transformers, with the ability to designate them as entry-points. It maintains an 'activeEntryPoint' field to indicate the currently selected entrypoint. The service also includes a 'getTransformer(name)' function to search and return a transformer by name, and a 'load()' function to load all transformers.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | AllSparkService":{"result":"The 'AllSparkService' is a service class that manages the creation and registration of transformers in the Cybertron service. It handles events through an 'eventTarget' field and stores transformer references in a 'transformers' field. It includes functions for loading and unloading plugins, refreshing the plugin list, and handling plugin-related errors. The 'load' function is responsible for creating and registering transformers, excluding log mode, and initiating the 'loadPlugins' function. Upon successful loading of all transformers, it dispatches a 'transformers-loaded' event.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantExtractorService":{"result":"The 'ConstantExtractorService' is a service class that manages transformers in the Cybertron service. It handles events, stores transformer references, and manages plugins. It has functions to load and return plugin definitions, refresh the plugin list by unloading old ones and loading new ones, and handle plugin loading errors. It also has a function to unregister and remove a plugin. The service class creates and registers transformers, excluding log mode, and loads plugins. After all transformers are loaded, it dispatches a 'transformers-loaded' event.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginRendererService":{"result":"The 'PluginRendererService' is a service class that manages the creation, registration, loading, and unloading of transformers in the Cybertron service. It contains fields for event handling and storing transformer references. It provides functions for loading and returning plugin definitions, refreshing the plugin list, handling plugin load errors, and removing plugins. It also includes a load function that creates and registers transformers, excludes log mode, and dispatches a 'transformers-loaded' event post loading.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginListRendererService":{"result":"The 'PluginListRendererService' is a service class that manages the creation, registration, loading, and unloading of transformers in the Cybertron service. It contains fields for event handling and storing transformer references. It provides functions for loading and returning plugin definitions, refreshing the plugin list, handling plugin load errors, and removing plugins. It also includes a load function that creates and registers transformers, excluding those in log mode, and dispatches an event after all transformers are loaded.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantsResourceRenderer":{"result":"The 'ConstantsResourceRenderer' is a service class that manages transformers in the Cybertron service. It handles events, stores transformer references, and manages plugins. It has functions to load and return plugin definitions, refresh the plugin list by unloading old ones and loading new ones, and handle plugin loading errors. It also has a function to unregister and remove a plugin. The service class creates and registers transformers, excluding log mode, and loads plugins. After all transformers are loaded, it dispatches a 'transformers-loaded' event.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ParserValidatorService":{"result":"The 'ParserValidatorService' is a service class that manages the creation, registration, and handling of transformers in the Cybertron service. It includes fields for event handling and transformer referencing. It features functions for loading and returning plugin definitions, refreshing and loading new plugins, handling plugin loading errors, and unregistering and removing plugins. The service also includes a load function that creates and registers transformers, excludes log mode, and calls the loadPlugins function. Upon loading all transformers, it dispatches a 'transformers-loaded' event.","prompt":null,"state":"still-valid"},"ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginTransformerService":{"result":"The 'PluginTransformerService' is a service class that manages the creation, registration, loading, and unloading of transformers in the Cybertron service. It maintains a list of transformers and handles events. It provides functions to load and return plugin definitions, refresh the plugin list by unloading old plugins and loading new ones, and handle plugin loading errors. It also includes a function to unregister and remove a plugin. The service dispatches a 'transformers-loaded' event after all transformers are loaded.","prompt":null,"state":"still-valid"},"421a1524-3e5c-431e-8444-470cae1d6cbb | TransformerBaseService":{"result":"The 'TransformerBaseService' is a foundational class for transformers, offering a unified interface and shared functions. It includes parameters for the transformer's name, dependencies, result format, language, temperature, and renderResults availability in its constructor. It utilizes a result-cache-service for result storage and tracking. It has a load function for loading dependencies and creating the cache. It also includes several functions like renderResults, hasPromptChanged, keyToMessageParams, updateResult, getResult, getResults, calculateMaxTokens, and buildMessage, which may require implementation by inheriting classes.","prompt":null,"state":"still-valid"},"421a1524-3e5c-431e-8444-470cae1d6cbb | ResultCacheService":{"result":"The 'ResultCacheService' is a service class that functions as a base for transformers, offering a unified interface and features. It is initialized with parameters such as the transformer's name, dependencies, result format, language, temperature, and renderResults availability. The service utilizes a result-cache-service to store and monitor results. It includes a load function for loading dependencies and creating the cache. It also comprises several functions like renderResults, hasPromptChanged, keyToMessageParams, updateResult, getResult, getResults, calculateMaxTokens, and buildMessage, each serving specific purposes and may require implementation by inheriting classes.","prompt":null,"state":"still-valid"},"32ab0827-4dc7-4078-bd8a-88ea9064239d | ConstantExtractorService":{"result":"The 'ConstantExtractorService' is a service class that inherits from the transformer-base service. It is designed to extract constant definitions from source code, store these definitions in a JSON file, and replace the constants in the source texts with references. The service class is initialized through a constructor with a 'constants' parameter and does not require any dependencies. It includes functions such as 'load', 'extract-quotes', 'collect-response', 'render-result', and 'get-result'.","prompt":null,"state":"still-valid"},"32ab0827-4dc7-4078-bd8a-88ea9064239d | TransformerBaseService":{"result":"The 'TransformerBaseService' is a service class that primarily functions to extract constant definitions from source code. It stores these definitions in a JSON file and replaces the original constants in the source code with references. This service class inherits from a base transformer service and is initialized through a constructor with a 'constants' parameter. It includes several methods such as 'load', 'extract-quotes', 'collect-response', 'render-result', and 'get-result'.","prompt":null,"state":"still-valid"},"8ac6d3c7-0806-4d9f-a790-88bbb45f9106 | PluginTransformerService":{"result":"The 'PluginTransformerService' is a service class that encapsulates a JavaScript object from a plugin to modify default behavior. It extends from the transformer-base service, validating the plugin, loading the transformer, computing maximum tokens, constructing messages, and rendering results using the plugin's functions. It also updates results and monitors for prompt changes using the plugin's functions. In the absence of specific plugin functions, it reverts to using the base service's functions.","prompt":null,"state":"still-valid"},"03c15033-710c-4035-8591-0017a7461ca9 | PluginRendererService":{"result":"The 'PluginRendererService' is a service class that converts a plugin definition into a JavaScript module. It extends from the transformer-base service and has unique constructor parameters. It includes a load function that sets the `constantsService` field, a saveFile function for file storage, and a cleanResult function to eliminate unwanted characters. The renderResult function constructs a message, sends a request, cleans the result, saves the file, and caches the result. The buildMessage function counts non-empty lines, constructs a message, and returns the result along with an empty array.","prompt":null,"state":"still-valid"},"03c15033-710c-4035-8591-0017a7461ca9 | TransformerBaseService":{"result":"The 'TransformerBaseService' is a service class that primarily functions to convert a plugin definition into a JavaScript module. It has specific constructor parameters and inherits from a base service. Key features include a load function that sets the 'constantsService' field, a saveFile function for file storage, and a cleanResult function that eliminates unnecessary characters. It also includes a renderResult function that performs multiple tasks such as building a message, sending a request, cleaning and saving the result, and caching the result. Additionally, it has a buildMessage function that counts non-empty lines, constructs a message, and returns the result along with an empty array.","prompt":null,"state":"still-valid"},"9b56f8e2-0e81-4cce-9555-4f163eda2294 | PluginListRendererService":{"result":"The 'PluginListRendererService' is a service class that generates a file containing a list of plugins to be loaded by the application. It inherits from the transformer-base class and includes a constructor with specific parameters. The service class features a load function that prompts the superclass to load and set a field, a saveFile function that saves an array to a file, and a renderResults function that constructs an array of files from the plugin-renderer and saves it to the output folder.","prompt":null,"state":"still-valid"},"9b56f8e2-0e81-4cce-9555-4f163eda2294 | TransformerBaseService":{"result":"The 'TransformerBaseService' is a service class that manages transformer-plugins for an application. It inherits from a base transformer class and is initialized with specific parameters. The service class has three main functions: 'load', 'saveFile', and 'renderResults'. The 'load' function instructs the superclass to load and set a specific field. The 'saveFile' function is responsible for saving an array to a file. The 'renderResults' function constructs an array of files from the plugin-renderer and saves it to a designated output folder.","prompt":null,"state":"still-valid"},"9b56f8e2-0e81-4cce-9555-4f163eda2294 | FolderService":{"result":"The 'FolderService' is a service class that manages the generation, loading, and saving of plugin files for an application. It inherits from the transformer-base class and utilizes specific parameters in its constructor. Key functions include 'load', which instructs the superclass to load and set a field, 'saveFile', which saves an array to a file, and 'renderResults', which constructs an array of files from the plugin-renderer and saves it to the output folder.","prompt":null,"state":"still-valid"},"15110a27-64e0-45a5-b6ac-23df16688604 | constants-resource renderer":{"result":"The 'constants-resource renderer' service is a specialized tool designed to generate a resource file containing all constants from fragments, which is then utilized by plugins for rendering purposes. This service is a derivative of the transformer-base service and is initialized with parameters such as name, dependencies, and isJson. During its construction, it establishes constantsService and isFullRender. The service offers functions like saveFile, which saves an array to a file, and renderResults, which constructs a json dictionary of constants.","prompt":null,"state":"still-valid"},"15110a27-64e0-45a5-b6ac-23df16688604 | transformer-base":{"result":"The 'transformer-base' service class is a foundational service that provides functionality for creating a resource file with constants from fragments, which is used by plugins for rendering. It includes a constructor that accepts parameters for name, dependencies, and isJson. The class also sets constantsService and isFullRender during its construction. Key methods of this class include saveFile, which saves an array to a file, and renderResults, which builds a JSON dictionary of constants.","prompt":null,"state":"still-valid"},"99052aeb-ef71-4cdb-ba64-1036a33417cc | parser validator service":{"result":"The 'parser validator service' is a debugging tool designed to validate the internal markdown parser. It captures the current text state for a given text fragment without using any llm. This service extends the transformer-base service, initialized with the name 'parser validator', no dependencies, and a false isJson setting. Its primary function, renderResult, processes a fragment input, consolidates its lines into a single string, stores the result, and then returns it.","prompt":null,"state":"still-valid"},"99052aeb-ef71-4cdb-ba64-1036a33417cc | transformer-base service":{"result":"The 'transformer-base service' is a parent service for the 'parser-validator service', a debugging tool that validates the internal markdown parser. It captures the current text state for a specific text fragment without using any llm. The service is initialized with the name 'parser validator', no dependencies, and isJson set to false. Its primary function, 'renderResult', processes a fragment, consolidates its lines into a single string, stores the result, and then returns it.","prompt":null,"state":"still-valid"}},"secondaryCache":{"9c672829-a31d-47cb-9d66-e676423a06da":["9c672829-a31d-47cb-9d66-e676423a06da | DialogService"],"DialogService":["9c672829-a31d-47cb-9d66-e676423a06da | DialogService"],"fc366a69-db91-4f35-b538-182295436d18":["fc366a69-db91-4f35-b538-182295436d18 | ThemeService"],"ThemeService":["fc366a69-db91-4f35-b538-182295436d18 | ThemeService"],"6e52cca8-7baf-4c4f-97c5-effbf603eb14":["6e52cca8-7baf-4c4f-97c5-effbf603eb14 | ProjectService"],"ProjectService":["6e52cca8-7baf-4c4f-97c5-effbf603eb14 | ProjectService","3cd6abe1-d84e-41c4-a421-07a63d196280 | ProjectService","31da607d-07e2-4c54-9b1c-9a11a786c58f | ProjectService"],"7946446e-33e7-4bd5-a7b6-3d001271627c":["7946446e-33e7-4bd5-a7b6-3d001271627c | ProjectConfigurationService"],"ProjectConfigurationService":["7946446e-33e7-4bd5-a7b6-3d001271627c | ProjectConfigurationService"],"fd347c00-e1ea-4961-8544-3048650deb2b":["fd347c00-e1ea-4961-8544-3048650deb2b | StorageService"],"StorageService":["fd347c00-e1ea-4961-8544-3048650deb2b | StorageService","3cd6abe1-d84e-41c4-a421-07a63d196280 | StorageService"],"3cd6abe1-d84e-41c4-a421-07a63d196280":["3cd6abe1-d84e-41c4-a421-07a63d196280 | ChangeProcessorService","3cd6abe1-d84e-41c4-a421-07a63d196280 | ProjectService","3cd6abe1-d84e-41c4-a421-07a63d196280 | LineParser","3cd6abe1-d84e-41c4-a421-07a63d196280 | StorageService"],"ChangeProcessorService":["3cd6abe1-d84e-41c4-a421-07a63d196280 | ChangeProcessorService"],"LineParser":["3cd6abe1-d84e-41c4-a421-07a63d196280 | LineParser","31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParser"],"8c9e5644-55a8-44c2-ac7b-6fdea2680697":["8c9e5644-55a8-44c2-ac7b-6fdea2680697 | FolderService"],"FolderService":["8c9e5644-55a8-44c2-ac7b-6fdea2680697 | FolderService","9b56f8e2-0e81-4cce-9555-4f163eda2294 | FolderService"],"7ed49936-ac3f-4a7c-a70d-8ccd51b1c327":["7ed49936-ac3f-4a7c-a70d-8ccd51b1c327 | SelectionService"],"SelectionService":["7ed49936-ac3f-4a7c-a70d-8ccd51b1c327 | SelectionService"],"958692be-22c0-452b-90ac-6c36a431fafd":["958692be-22c0-452b-90ac-6c36a431fafd | KeyService"],"KeyService":["958692be-22c0-452b-90ac-6c36a431fafd | KeyService","31da607d-07e2-4c54-9b1c-9a11a786c58f | KeyService"],"31da607d-07e2-4c54-9b1c-9a11a786c58f":["31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParser","31da607d-07e2-4c54-9b1c-9a11a786c58f | TextFragment","31da607d-07e2-4c54-9b1c-9a11a786c58f | ProjectService","31da607d-07e2-4c54-9b1c-9a11a786c58f | KeyService","31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParserHelpers"],"TextFragment":["31da607d-07e2-4c54-9b1c-9a11a786c58f | TextFragment"],"LineParserHelpers":["31da607d-07e2-4c54-9b1c-9a11a786c58f | LineParserHelpers"],"45fd1335-5429-47ea-a577-c11db18a28a0":["45fd1335-5429-47ea-a577-c11db18a28a0 | PositionTrackingService"],"PositionTrackingService":["45fd1335-5429-47ea-a577-c11db18a28a0 | PositionTrackingService"],"68dbb9c3-e1a8-4287-b68a-db5070e55505":["68dbb9c3-e1a8-4287-b68a-db5070e55505 | LogService"],"LogService":["68dbb9c3-e1a8-4287-b68a-db5070e55505 | LogService"],"0136ea45-e1de-4444-b833-2d8cfd2cc956":["0136ea45-e1de-4444-b833-2d8cfd2cc956 | GPTService"],"GPTService":["0136ea45-e1de-4444-b833-2d8cfd2cc956 | GPTService"],"96aad863-3686-497b-8638-99081b0c947e":["96aad863-3686-497b-8638-99081b0c947e | ResultCacheService"],"ResultCacheService":["96aad863-3686-497b-8638-99081b0c947e | ResultCacheService","421a1524-3e5c-431e-8444-470cae1d6cbb | ResultCacheService"],"33a93cd2-11ee-4ec2-9263-101b212474ab":["33a93cd2-11ee-4ec2-9263-101b212474ab | BuildService"],"BuildService":["33a93cd2-11ee-4ec2-9263-101b212474ab | BuildService"],"1056ce6a-ac4b-410e-91d3-f8117a6084b0":["1056ce6a-ac4b-410e-91d3-f8117a6084b0 | BuildStackService"],"BuildStackService":["1056ce6a-ac4b-410e-91d3-f8117a6084b0 | BuildStackService"],"849a7ae4-6a95-43dd-9c90-6ef41dc86a80":["849a7ae4-6a95-43dd-9c90-6ef41dc86a80 | CybertronService"],"CybertronService":["849a7ae4-6a95-43dd-9c90-6ef41dc86a80 | CybertronService"],"ccbe1be3-fea6-4080-bce3-e13de89e4e42":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | AllSparkService","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantExtractorService","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginRendererService","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginListRendererService","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantsResourceRenderer","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ParserValidatorService","ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginTransformerService"],"AllSparkService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | AllSparkService"],"ConstantExtractorService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantExtractorService","32ab0827-4dc7-4078-bd8a-88ea9064239d | ConstantExtractorService"],"PluginRendererService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginRendererService","03c15033-710c-4035-8591-0017a7461ca9 | PluginRendererService"],"PluginListRendererService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginListRendererService","9b56f8e2-0e81-4cce-9555-4f163eda2294 | PluginListRendererService"],"ConstantsResourceRenderer":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ConstantsResourceRenderer"],"ParserValidatorService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | ParserValidatorService"],"PluginTransformerService":["ccbe1be3-fea6-4080-bce3-e13de89e4e42 | PluginTransformerService","8ac6d3c7-0806-4d9f-a790-88bbb45f9106 | PluginTransformerService"],"421a1524-3e5c-431e-8444-470cae1d6cbb":["421a1524-3e5c-431e-8444-470cae1d6cbb | TransformerBaseService","421a1524-3e5c-431e-8444-470cae1d6cbb | ResultCacheService"],"TransformerBaseService":["421a1524-3e5c-431e-8444-470cae1d6cbb | TransformerBaseService","32ab0827-4dc7-4078-bd8a-88ea9064239d | TransformerBaseService","03c15033-710c-4035-8591-0017a7461ca9 | TransformerBaseService","9b56f8e2-0e81-4cce-9555-4f163eda2294 | TransformerBaseService"],"32ab0827-4dc7-4078-bd8a-88ea9064239d":["32ab0827-4dc7-4078-bd8a-88ea9064239d | ConstantExtractorService","32ab0827-4dc7-4078-bd8a-88ea9064239d | TransformerBaseService"],"8ac6d3c7-0806-4d9f-a790-88bbb45f9106":["8ac6d3c7-0806-4d9f-a790-88bbb45f9106 | PluginTransformerService"],"03c15033-710c-4035-8591-0017a7461ca9":["03c15033-710c-4035-8591-0017a7461ca9 | PluginRendererService","03c15033-710c-4035-8591-0017a7461ca9 | TransformerBaseService"],"9b56f8e2-0e81-4cce-9555-4f163eda2294":["9b56f8e2-0e81-4cce-9555-4f163eda2294 | PluginListRendererService","9b56f8e2-0e81-4cce-9555-4f163eda2294 | TransformerBaseService","9b56f8e2-0e81-4cce-9555-4f163eda2294 | FolderService"],"15110a27-64e0-45a5-b6ac-23df16688604":["15110a27-64e0-45a5-b6ac-23df16688604 | constants-resource renderer","15110a27-64e0-45a5-b6ac-23df16688604 | transformer-base"],"constants-resource renderer":["15110a27-64e0-45a5-b6ac-23df16688604 | constants-resource renderer"],"transformer-base":["15110a27-64e0-45a5-b6ac-23df16688604 | transformer-base"],"99052aeb-ef71-4cdb-ba64-1036a33417cc":["99052aeb-ef71-4cdb-ba64-1036a33417cc | parser validator service","99052aeb-ef71-4cdb-ba64-1036a33417cc | transformer-base service"],"parser validator service":["99052aeb-ef71-4cdb-ba64-1036a33417cc | parser validator service"],"transformer-base service":["99052aeb-ef71-4cdb-ba64-1036a33417cc | transformer-base service"]},"overwrites":{},"lastSaveDate":"2024-01-06T13:59:07.379Z"}